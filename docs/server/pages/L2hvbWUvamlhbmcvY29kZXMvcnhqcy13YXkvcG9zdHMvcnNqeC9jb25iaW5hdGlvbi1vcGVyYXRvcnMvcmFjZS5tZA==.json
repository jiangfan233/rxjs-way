{"pageProps":{"content":"<h5>race 第一个吐出数据Observable对象保留订阅状态，其他observable直接取消订阅；\"赢者通吃\"</h5>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> fakeRace = (...<span class=\"hljs-attr\">rest</span>: <span class=\"hljs-title class_\">Observable</span>&lt;any&gt;[]): <span class=\"hljs-title class_\">Observable</span>&lt;any&gt; =&gt; {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Observable</span>.<span class=\"hljs-title function_\">create</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">observer: Subscriber&lt;any&gt;</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">idx</span>: number = -<span class=\"hljs-number\">1</span>;\n\n    <span class=\"hljs-keyword\">const</span> subs = rest.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">obs$, index</span>) =&gt;</span> {\n      <span class=\"hljs-keyword\">return</span> obs$.<span class=\"hljs-title function_\">subscribe</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">val</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">if</span> (idx &lt;= -<span class=\"hljs-number\">1</span>) {\n          <span class=\"hljs-comment\">// idx用来保留第一个吐出数据的 Obs，其他Obs都会取消订阅</span>\n          idx = index;\n          subs\n            .<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">_, index</span>) =&gt;</span> index !== idx)\n            .<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">sub</span>) =&gt;</span> sub.<span class=\"hljs-title function_\">unsubscribe</span>());\n        }\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">\"inner\"</span>, val);\n        observer.<span class=\"hljs-title function_\">next</span>(val);\n      });\n    });\n\n    <span class=\"hljs-comment\">// 需要把 subscription 放在堆上来以保证 unsubscribe 访问到最新的 idx</span>\n    <span class=\"hljs-keyword\">return</span> {\n      <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-params\"></span>) {\n        <span class=\"hljs-comment\">// 这里需要考虑两种情况：</span>\n        <span class=\"hljs-comment\">// a、下游取消订阅时，上游仅有一个处于订阅状态的 Observable</span>\n        <span class=\"hljs-comment\">// b、下游取消订阅时，上游所有Observables都处于订阅状态</span>\n        <span class=\"hljs-keyword\">if</span> (idx &lt;= -<span class=\"hljs-number\">1</span>) {\n          subs.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">sub</span>) =&gt;</span> sub.<span class=\"hljs-title function_\">unsubscribe</span>());\n        } <span class=\"hljs-keyword\">else</span> {\n          subs[idx].<span class=\"hljs-title function_\">unsubscribe</span>();\n        }\n      },\n    };\n  });\n};\n\n<span class=\"hljs-comment\">// const source2$ = timer(500, 1000);</span>\n\n<span class=\"hljs-comment\">// const source1$ = timer(200, 2000).pipe(</span>\n<span class=\"hljs-comment\">//     map(x =&gt; `${x}-a`)</span>\n<span class=\"hljs-comment\">// );</span>\n\n<span class=\"hljs-comment\">// const subscription = fakeRace(</span>\n<span class=\"hljs-comment\">// // race(</span>\n<span class=\"hljs-comment\">//     source1$, </span>\n<span class=\"hljs-comment\">//     source2$</span>\n<span class=\"hljs-comment\">// ).subscribe(console.log);</span>\n\n<span class=\"hljs-comment\">// setTimeout(() =&gt; {</span>\n<span class=\"hljs-comment\">//     subscription.unsubscribe();</span>\n<span class=\"hljs-comment\">//     // console.log(subscription)</span>\n<span class=\"hljs-comment\">// }, 100);</span>\n</code></pre>\n","menuArray":[{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9pbmRleC5tZA==","label":"rsjx","subMenus":[{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvaW5kZXgubWQ=","label":"conbination-operators","subMenus":[{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvaW5kZXgubWQ=","label":"index","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvbWVyZ2UubWQ=","label":"merge","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvcmFjZS5tZA==","label":"race","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvc3RhcnRXaXRoLm1k","label":"startWith","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvd2l0aExhdGVzdEZyb20ubWQ=","label":"withLatestFrom","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvemlwLWNvbmJpbmVMYXRlc3QubWQ=","label":"zip-conbineLatest","subMenus":null}]},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9oaWdoLW9yZGVyIE9ic2VydmFibGVzL2luZGV4Lm1k","label":"high-order Observables","subMenus":[{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9oaWdoLW9yZGVyIE9ic2VydmFibGVzL2NvbmNhdEFsbC1tZXJnZUFsbC5tZA==","label":"concatAll-mergeAll","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9oaWdoLW9yZGVyIE9ic2VydmFibGVzL2luZGV4Lm1k","label":"index","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9oaWdoLW9yZGVyIE9ic2VydmFibGVzL3N3aXRjaEFMTC1leGhhdXN0Lm1k","label":"switchALL-exhaust","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9oaWdoLW9yZGVyIE9ic2VydmFibGVzL3ppcEFsbC1jb25iaW5lQWxsLm1k","label":"zipAll-conbineAll","subMenus":null}]},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9pbmRleC5tZA==","label":"index","subMenus":null}]}]},"__N_SSG":true}