{"pageProps":{"content":"<h4>mergeAll 和 concatAll 都是把 Observable 对象降低一维</h4>\n<ul>\n<li>concatAll 是按先后顺序把 子数据流 头(subscribe)尾(completed)相连，</li>\n<li>因此</li>\n<li>1、最后形成的数据流时间比任何一个子数据流都要长；</li>\n<li>2、某时刻的数据只属于一个 子数据流；</li>\n<li>3、子数据流的订阅时间可能晚于 该数据流 在下游的出现时间；</li>\n<li>4、若中间的子数据流不 complete，后面的子数据流永远不会被订阅。</li>\n<li>5、concatAll 可比喻为 单线程<br>\n<br></li>\n<li>mergeAll 是只要有子数据流在 下游 出现，就会被订阅。</li>\n<li>因此</li>\n<li>1、最后形成的数据流执行时间可能和 某一个子数据流 时间相同。</li>\n<li>2、某时刻的数据可能源于多个数据流</li>\n<li>3、子数据流在下游的出现时间和订阅时间基本一致（逻辑上时间相同）</li>\n<li>4、所有的子数据流都会被订阅</li>\n<li>5、mergeAll 可比喻为 并发</li>\n</ul>\n<pre><code class=\"hljs language-javascript\">  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">fakeConcatAll</span> = (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-function\">(<span class=\"hljs-params\">obs$: Observable&lt;any&gt;</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">obsArr</span>: <span class=\"hljs-title class_\">Observable</span>&lt;any&gt;[] = [];\n    <span class=\"hljs-keyword\">let</span> currentSubscription :<span class=\"hljs-title class_\">Subscription</span> | <span class=\"hljs-literal\">undefined</span>;\n    <span class=\"hljs-keyword\">let</span> hoCompleted = <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Observable</span>.<span class=\"hljs-title function_\">create</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">observer: Subscriber&lt;any&gt;</span>) =&gt;</span> {\n\n        <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">start</span> = (<span class=\"hljs-params\"></span>) =&gt; {\n            <span class=\"hljs-keyword\">if</span>(obsArr.<span class=\"hljs-property\">length</span> &lt;= <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span>;\n            <span class=\"hljs-keyword\">return</span> obsArr.<span class=\"hljs-title function_\">shift</span>()!.<span class=\"hljs-title function_\">subscribe</span>(\n                <span class=\"hljs-function\"><span class=\"hljs-params\">val</span> =&gt;</span> observer.<span class=\"hljs-title function_\">next</span>(val),\n                <span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> observer.<span class=\"hljs-title function_\">error</span>(err),\n                <span class=\"hljs-function\">() =&gt;</span> {\n                    <span class=\"hljs-keyword\">if</span>(obsArr.<span class=\"hljs-property\">length</span> &gt; <span class=\"hljs-number\">0</span>) {\n                        currentSubscription = <span class=\"hljs-title function_\">start</span>();\n                    } <span class=\"hljs-keyword\">else</span> {\n                        currentSubscription = <span class=\"hljs-literal\">undefined</span>;\n                        <span class=\"hljs-keyword\">if</span>(hoCompleted) {\n                            observer.<span class=\"hljs-title function_\">complete</span>();\n                        }\n                    }\n                }\n            )\n        }\n\n        <span class=\"hljs-keyword\">const</span> hoSubscrption = obs$.<span class=\"hljs-title function_\">subscribe</span>(\n            <span class=\"hljs-function\"><span class=\"hljs-params\">subObs</span> =&gt;</span> {\n                obsArr.<span class=\"hljs-title function_\">push</span>(subObs);\n                <span class=\"hljs-keyword\">if</span>(!currentSubscription) {\n                    currentSubscription = <span class=\"hljs-title function_\">start</span>();\n                }\n            },\n            <span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> observer.<span class=\"hljs-title function_\">error</span>(err),\n            <span class=\"hljs-function\">() =&gt;</span> hoCompleted = <span class=\"hljs-literal\">true</span>\n        )\n\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-params\"></span>) {\n                hoSubscrption.<span class=\"hljs-title function_\">unsubscribe</span>();\n                currentSubscription &amp;&amp; currentSubscription.<span class=\"hljs-title function_\">unsubscribe</span>();\n                obsArr.<span class=\"hljs-property\">length</span> = <span class=\"hljs-number\">0</span>;\n            }\n        }\n    })\n}\n\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">fakeMergeAll</span> = (<span class=\"hljs-params\"></span>) =&gt; <span class=\"hljs-function\">(<span class=\"hljs-params\">obs$:Observable&lt;Observable&lt;any&gt;&gt;</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">subscriptionArr</span>: <span class=\"hljs-title class_\">Subscription</span>[] = [];\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Observable</span>.<span class=\"hljs-title function_\">create</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">observer: Subscriber&lt;any&gt;</span>) =&gt;</span> {\n        <span class=\"hljs-keyword\">const</span> hoSubscription = obs$.<span class=\"hljs-title function_\">subscribe</span>(\n            subObs$ =&gt; {\n                <span class=\"hljs-keyword\">const</span> sub = subObs$.<span class=\"hljs-title function_\">subscribe</span>(\n                    <span class=\"hljs-function\"><span class=\"hljs-params\">val</span> =&gt;</span> observer.<span class=\"hljs-title function_\">next</span>(val),\n                    <span class=\"hljs-function\"><span class=\"hljs-params\">err</span> =&gt;</span> observer.<span class=\"hljs-title function_\">error</span>(err),\n                    <span class=\"hljs-function\">() =&gt;</span> {\n                        <span class=\"hljs-keyword\">if</span>(hoSubscription.<span class=\"hljs-property\">closed</span> &amp;&amp;\n                            subscriptionArr\n                                <span class=\"hljs-comment\">// 执行到这里的时候，该Observable已经可以 \"认为\" completed了，</span>\n                                <span class=\"hljs-comment\">// 但是还没有被标记为closed</span>\n                                .<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item !== sub)\n                                .<span class=\"hljs-title function_\">every</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item.<span class=\"hljs-property\">closed</span>)) {\n                            observer.<span class=\"hljs-title function_\">complete</span>();\n                        }\n                    }\n                )\n                subscriptionArr.<span class=\"hljs-title function_\">push</span>(sub);\n            }\n        )\n\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-title function_\">unsubscribe</span>(<span class=\"hljs-params\"></span>) {\n                subscriptionArr.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">sub</span> =&gt;</span> sub.<span class=\"hljs-title function_\">unsubscribe</span>());\n                hoSubscription.<span class=\"hljs-title function_\">unsubscribe</span>();\n            }\n        }\n    })\n}\n\n</code></pre>\n","menuArray":[{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9pbmRleC5tZA==","label":"rsjx","subMenus":[{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvaW5kZXgubWQ=","label":"conbination-operators","subMenus":[{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvaW5kZXgubWQ=","label":"index","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvbWVyZ2UubWQ=","label":"merge","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvcmFjZS5tZA==","label":"race","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvc3RhcnRXaXRoLm1k","label":"startWith","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvd2l0aExhdGVzdEZyb20ubWQ=","label":"withLatestFrom","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9jb25iaW5hdGlvbi1vcGVyYXRvcnMvemlwLWNvbmJpbmVMYXRlc3QubWQ=","label":"zip-conbineLatest","subMenus":null}]},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9oaWdoLW9yZGVyIE9ic2VydmFibGVzL2luZGV4Lm1k","label":"high-order Observables","subMenus":[{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9oaWdoLW9yZGVyIE9ic2VydmFibGVzL2NvbmNhdEFsbC1tZXJnZUFsbC5tZA==","label":"concatAll-mergeAll","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9oaWdoLW9yZGVyIE9ic2VydmFibGVzL2luZGV4Lm1k","label":"index","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9oaWdoLW9yZGVyIE9ic2VydmFibGVzL3N3aXRjaEFMTC1leGhhdXN0Lm1k","label":"switchALL-exhaust","subMenus":null},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9oaWdoLW9yZGVyIE9ic2VydmFibGVzL3ppcEFsbC1jb25iaW5lQWxsLm1k","label":"zipAll-conbineAll","subMenus":null}]},{"id":"L2hvbWUvamlhbmcvY29kZXMvcnhqcy13YXkvcG9zdHMvcnNqeC9pbmRleC5tZA==","label":"index","subMenus":null}]}]},"__N_SSG":true}